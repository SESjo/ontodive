% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gt_plt_bar_stack_extra.R
\name{gt_plt_bar_stack_extra}
\alias{gt_plt_bar_stack_extra}
\title{Add a percent stacked barchart in place of existing data.}
\usage{
gt_plt_bar_stack_extra(
  gt_object,
  column = NULL,
  palette = c("#ff4343", "#bfbfbf", "#0a1c2b", "#e1be6a"),
  labels = c("Group 1", "Group 2", "Group 3", "Group 4"),
  position = "fill",
  width = 70,
  fmt_fn = label_number(scale_cut = cut_short_scale(), trim = TRUE)
)
}
\arguments{
\item{gt_object}{An existing gt table object of class gt_tbl}

\item{column}{The column wherein the percent stacked barchart should replace existing data. Note that the data must be represented as a list of numeric values ahead of time.}

\item{palette}{A color palette of length 2 or 3, represented either by hex colors (\code{#ff4343}) or named colors (\code{red}).}

\item{labels}{A vector of strings of length 2 or 3, representing the labels for the bar chart, will be colored according to the palette as well.}

\item{position}{An string indicator passed to ggplot2 indicating if the bar should be a percent of total \code{fill} or stacked as the raw values \code{stack}.}

\item{width}{An integer representing the width of the bar chart in pixels.}

\item{fmt_fn}{A specific function from \code{⁠scales::lab_xxx}⁠ family. Defaults to \code{scales::label_number}}
}
\value{
An object of class gt_tbl.
}
\description{
The \code{gt_plt_bar_stack_extra} is a copy paste of the function
\code{gt_plt_bar_stack} available in the \code{gtExtras} package where the
limitation of 3 user-specified has been risen to 4. It takes an existing
\code{gt_tbl} object and converts the existing values into a percent stacked
barchart. The bar chart will represent either 2, 3 or 4 user-specified values
per row, and requires a list column ahead of time. The palette and labels need
to be equal length. The values must either add up to 100 \emph{i.e.} as
percentage points if using \code{position = 'fill'}, or can be raw values
with \code{position = 'stack'}. Note that the labels can be controlled via
the \code{fmt_fn} argument and the \code{⁠scales::lab_xxx} family of function.
}
\examples{
\dontrun{
# load library
library(gt)
library(dplyr)

# dummy dataset
ex_df <- dplyr::tibble(
  x = c(
    "Example 1", "Example 1",
    "Example 1", "Example 1", "Example 2", "Example 2", "Example 2", "Example 2",
    "Example 3", "Example 3", "Example 3", "Example 3", "Example 4", "Example 4", "Example 4",
    "Example 4"
  ),
  measure = c(
    "Measure 1", "Measure 2",
    "Measure 3", "Measure 4", "Measure 1", "Measure 2", "Measure 3", "Measure 4",
    "Measure 1", "Measure 2", "Measure 3", "Measure 4", "Measure 1", "Measure 2",
    "Measure 3", "Measure 4"
  ),
  data = c(30, 20, 40, 10, 30, 30, 20, 20, 30, 10, 30, 30, 30, 50, 10, 10)
)

# display results
ex_df \%>\%
  group_by(x) \%>\%
  summarise(list_data = list(data)) \%>\%
  gt() \%>\%
  gt_plt_bar_stack_extra(column = list_data)
}

}
\references{
\url{https://github.com/jthomasmock/gtExtras/blob/HEAD/R/gt_pct_bar.R}
}
\seealso{
\code{\link[gtExtras]{gt_plt_bar_stack}}
}
